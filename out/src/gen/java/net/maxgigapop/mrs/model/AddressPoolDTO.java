/*
 * StackV Orchestrator Developer API
 * Documentation for the client-accessible endpoints of the StackV orchestrator.
 *
 * The version of the OpenAPI document: 0.8.2
 * Contact: alberto.est.jimenez@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.maxgigapop.mrs.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This schema represents the limited DTO of an address pool.
 */
@ApiModel(description = "This schema represents the limited DTO of an address pool.")
@JsonPropertyOrder({
  AddressPoolDTO.JSON_PROPERTY_ID,
  AddressPoolDTO.JSON_PROPERTY_NAME,
  AddressPoolDTO.JSON_PROPERTY_TYPE,
  AddressPoolDTO.JSON_PROPERTY_POOL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2025-07-10T09:14:01.648708-07:00[America/Los_Angeles]", comments = "Generator version: 7.14.0")
public class AddressPoolDTO   {
  public static final String JSON_PROPERTY_ID = "id";
  @JsonProperty(JSON_PROPERTY_ID)
  private BigDecimal id;

  public static final String JSON_PROPERTY_NAME = "name";
  @JsonProperty(JSON_PROPERTY_NAME)
  private String name;

  /**
   * The type of address a pool manages.
   */
  public enum TypeEnum {
    IPV4("IPv4"),
    
    IPV6("IPv6"),
    
    ID("ID"),
    
    MAC("MAC");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  @JsonProperty(JSON_PROPERTY_TYPE)
  private TypeEnum type;

  public static final String JSON_PROPERTY_POOL = "pool";
  @JsonProperty(JSON_PROPERTY_POOL)
  private String pool;

  public AddressPoolDTO id(BigDecimal id) {
    this.id = id;
    return this;
  }

  /**
   * Unique ID of the address pool.
   * @return id
   **/
  @JsonProperty(value = "id")
  @ApiModelProperty(example = "19", required = true, value = "Unique ID of the address pool.")
  @NotNull @Valid 
  public BigDecimal getId() {
    return id;
  }

  public void setId(BigDecimal id) {
    this.id = id;
  }

  public AddressPoolDTO name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Human readable name of the address pool.
   * @return name
   **/
  @JsonProperty(value = "name")
  @ApiModelProperty(example = "ESNet East Pool 4", required = true, value = "Human readable name of the address pool.")
  @NotNull 
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AddressPoolDTO type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * The type of address a pool manages.
   * @return type
   **/
  @JsonProperty(value = "type")
  @ApiModelProperty(required = true, value = "The type of address a pool manages.")
  @NotNull 
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public AddressPoolDTO pool(String pool) {
    this.pool = pool;
    return this;
  }

  /**
   * CSV string of pool data.
   * @return pool
   **/
  @JsonProperty(value = "pool")
  @ApiModelProperty(example = "fc00:3600::0/64,[...],fc00:3601::0/64", required = true, value = "CSV string of pool data.")
  @NotNull 
  public String getPool() {
    return pool;
  }

  public void setPool(String pool) {
    this.pool = pool;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddressPoolDTO addressPoolDTO = (AddressPoolDTO) o;
    return Objects.equals(this.id, addressPoolDTO.id) &&
        Objects.equals(this.name, addressPoolDTO.name) &&
        Objects.equals(this.type, addressPoolDTO.type) &&
        Objects.equals(this.pool, addressPoolDTO.pool);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, type, pool);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddressPoolDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    pool: ").append(toIndentedString(pool)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

