/*
 * StackV Orchestrator Developer API
 * Documentation for the client-accessible endpoints of the StackV orchestrator.
 *
 * The version of the OpenAPI document: 0.8.2
 * Contact: alberto.est.jimenez@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.maxgigapop.mrs.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This schema represents a specific address allocation.
 */
@ApiModel(description = "This schema represents a specific address allocation.")
@JsonPropertyOrder({
  AddressAllocationDTO.JSON_PROPERTY_ID,
  AddressAllocationDTO.JSON_PROPERTY_NAME,
  AddressAllocationDTO.JSON_PROPERTY_ADDRESS,
  AddressAllocationDTO.JSON_PROPERTY_EXPIRY,
  AddressAllocationDTO.JSON_PROPERTY_SCOPE,
  AddressAllocationDTO.JSON_PROPERTY_AFFILIATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2025-07-10T09:14:01.648708-07:00[America/Los_Angeles]", comments = "Generator version: 7.14.0")
public class AddressAllocationDTO   {
  public static final String JSON_PROPERTY_ID = "id";
  @JsonProperty(JSON_PROPERTY_ID)
  private BigDecimal id;

  public static final String JSON_PROPERTY_NAME = "name";
  @JsonProperty(JSON_PROPERTY_NAME)
  private String name;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  private String address;

  public static final String JSON_PROPERTY_EXPIRY = "expiry";
  @JsonProperty(JSON_PROPERTY_EXPIRY)
  private BigDecimal expiry;

  public static final String JSON_PROPERTY_SCOPE = "scope";
  @JsonProperty(JSON_PROPERTY_SCOPE)
  private String scope;

  public static final String JSON_PROPERTY_AFFILIATE = "affiliate";
  @JsonProperty(JSON_PROPERTY_AFFILIATE)
  private String affiliate;

  public AddressAllocationDTO id(BigDecimal id) {
    this.id = id;
    return this;
  }

  /**
   * Unique ID of the address allocation.
   * @return id
   **/
  @JsonProperty(value = "id")
  @ApiModelProperty(example = "552", required = true, value = "Unique ID of the address allocation.")
  @NotNull @Valid 
  public BigDecimal getId() {
    return id;
  }

  public void setId(BigDecimal id) {
    this.id = id;
  }

  public AddressAllocationDTO name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the address allocation.
   * @return name
   **/
  @JsonProperty(value = "name")
  @ApiModelProperty(example = "Dev5 IP 6", required = true, value = "Name of the address allocation.")
  @NotNull 
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AddressAllocationDTO address(String address) {
    this.address = address;
    return this;
  }

  /**
   * The address itself.
   * @return address
   **/
  @JsonProperty(value = "address")
  @ApiModelProperty(example = "192.168.66.15", required = true, value = "The address itself.")
  @NotNull 
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public AddressAllocationDTO expiry(BigDecimal expiry) {
    this.expiry = expiry;
    return this;
  }

  /**
   * The address expiration timestamp.
   * @return expiry
   **/
  @JsonProperty(value = "expiry")
  @ApiModelProperty(example = "1698174979000", value = "The address expiration timestamp.")
  @Valid 
  public BigDecimal getExpiry() {
    return expiry;
  }

  public void setExpiry(BigDecimal expiry) {
    this.expiry = expiry;
  }

  public AddressAllocationDTO scope(String scope) {
    this.scope = scope;
    return this;
  }

  /**
   * The address scope.
   * @return scope
   **/
  @JsonProperty(value = "scope")
  @ApiModelProperty(example = "default", value = "The address scope.")
  
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }

  public AddressAllocationDTO affiliate(String affiliate) {
    this.affiliate = affiliate;
    return this;
  }

  /**
   * Name of the address allocation.
   * @return affiliate
   **/
  @JsonProperty(value = "affiliate")
  @ApiModelProperty(example = "urn:ogf:network:nrp-nautilus.io:2020:sn3700_s0:PortChannel501:vlanport+3987", value = "Name of the address allocation.")
  
  public String getAffiliate() {
    return affiliate;
  }

  public void setAffiliate(String affiliate) {
    this.affiliate = affiliate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddressAllocationDTO addressAllocationDTO = (AddressAllocationDTO) o;
    return Objects.equals(this.id, addressAllocationDTO.id) &&
        Objects.equals(this.name, addressAllocationDTO.name) &&
        Objects.equals(this.address, addressAllocationDTO.address) &&
        Objects.equals(this.expiry, addressAllocationDTO.expiry) &&
        Objects.equals(this.scope, addressAllocationDTO.scope) &&
        Objects.equals(this.affiliate, addressAllocationDTO.affiliate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, address, expiry, scope, affiliate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddressAllocationDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    expiry: ").append(toIndentedString(expiry)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    affiliate: ").append(toIndentedString(affiliate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

