/*
 * StackV Orchestrator Developer API
 * Documentation for the client-accessible endpoints of the StackV orchestrator.
 *
 * The version of the OpenAPI document: 0.8.2
 * Contact: alberto.est.jimenez@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.maxgigapop.mrs.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This schema represents the full result set from service instance verification.
 */
@ApiModel(description = "This schema represents the full result set from service instance verification.")
@JsonPropertyOrder({
  VerificationResult.JSON_PROPERTY_DELTA_UUID,
  VerificationResult.JSON_PROPERTY_CREATION_TIME,
  VerificationResult.JSON_PROPERTY_VERIFIED_REDUCTION,
  VerificationResult.JSON_PROPERTY_VERIFIED_ADDITION,
  VerificationResult.JSON_PROPERTY_UNVERIFIED_REDUCTION,
  VerificationResult.JSON_PROPERTY_UNVERIFIED_ADDITION,
  VerificationResult.JSON_PROPERTY_REDUCTION,
  VerificationResult.JSON_PROPERTY_ADDITION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2025-07-10T09:14:01.648708-07:00[America/Los_Angeles]", comments = "Generator version: 7.14.0")
public class VerificationResult   {
  public static final String JSON_PROPERTY_DELTA_UUID = "delta_uuid";
  @JsonProperty(JSON_PROPERTY_DELTA_UUID)
  private String deltaUuid;

  public static final String JSON_PROPERTY_CREATION_TIME = "creation_time";
  @JsonProperty(JSON_PROPERTY_CREATION_TIME)
  private String creationTime;

  public static final String JSON_PROPERTY_VERIFIED_REDUCTION = "verified_reduction";
  @JsonProperty(JSON_PROPERTY_VERIFIED_REDUCTION)
  private String verifiedReduction;

  public static final String JSON_PROPERTY_VERIFIED_ADDITION = "verified_addition";
  @JsonProperty(JSON_PROPERTY_VERIFIED_ADDITION)
  private String verifiedAddition;

  public static final String JSON_PROPERTY_UNVERIFIED_REDUCTION = "unverified_reduction";
  @JsonProperty(JSON_PROPERTY_UNVERIFIED_REDUCTION)
  private String unverifiedReduction;

  public static final String JSON_PROPERTY_UNVERIFIED_ADDITION = "unverified_addition";
  @JsonProperty(JSON_PROPERTY_UNVERIFIED_ADDITION)
  private String unverifiedAddition;

  /**
   * String boolean of whether the reduction is present.
   */
  public enum ReductionEnum {
    TRUE("true"),
    
    FALSE("false");

    private String value;

    ReductionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReductionEnum fromValue(String value) {
      for (ReductionEnum b : ReductionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REDUCTION = "reduction";
  @JsonProperty(JSON_PROPERTY_REDUCTION)
  private ReductionEnum reduction;

  /**
   * String boolean of whether the addition is present.
   */
  public enum AdditionEnum {
    TRUE("true"),
    
    FALSE("false");

    private String value;

    AdditionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AdditionEnum fromValue(String value) {
      for (AdditionEnum b : AdditionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ADDITION = "addition";
  @JsonProperty(JSON_PROPERTY_ADDITION)
  private AdditionEnum addition;

  public VerificationResult deltaUuid(String deltaUuid) {
    this.deltaUuid = deltaUuid;
    return this;
  }

  /**
   * UUID of delta being verified.
   * @return deltaUuid
   **/
  @JsonProperty(value = "delta_uuid")
  @ApiModelProperty(example = "de159dae-7b00-480c-b4ee-d34e637c68b0", required = true, value = "UUID of delta being verified.")
  @NotNull 
  public String getDeltaUuid() {
    return deltaUuid;
  }

  public void setDeltaUuid(String deltaUuid) {
    this.deltaUuid = deltaUuid;
  }

  public VerificationResult creationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * When this verification run started.
   * @return creationTime
   **/
  @JsonProperty(value = "creation_time")
  @ApiModelProperty(example = "2021-04-05", required = true, value = "When this verification run started.")
  @NotNull 
  public String getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(String creationTime) {
    this.creationTime = creationTime;
  }

  public VerificationResult verifiedReduction(String verifiedReduction) {
    this.verifiedReduction = verifiedReduction;
    return this;
  }

  /**
   * JSON string of the verified reduction model.
   * @return verifiedReduction
   **/
  @JsonProperty(value = "verified_reduction")
  @ApiModelProperty(example = "(Reduction model JSON)", value = "JSON string of the verified reduction model.")
  
  public String getVerifiedReduction() {
    return verifiedReduction;
  }

  public void setVerifiedReduction(String verifiedReduction) {
    this.verifiedReduction = verifiedReduction;
  }

  public VerificationResult verifiedAddition(String verifiedAddition) {
    this.verifiedAddition = verifiedAddition;
    return this;
  }

  /**
   * JSON string of the verified addition model.
   * @return verifiedAddition
   **/
  @JsonProperty(value = "verified_addition")
  @ApiModelProperty(example = "(Addition model JSON)", value = "JSON string of the verified addition model.")
  
  public String getVerifiedAddition() {
    return verifiedAddition;
  }

  public void setVerifiedAddition(String verifiedAddition) {
    this.verifiedAddition = verifiedAddition;
  }

  public VerificationResult unverifiedReduction(String unverifiedReduction) {
    this.unverifiedReduction = unverifiedReduction;
    return this;
  }

  /**
   * JSON string of the unverified reduction model.
   * @return unverifiedReduction
   **/
  @JsonProperty(value = "unverified_reduction")
  @ApiModelProperty(example = "(Reduction model JSON)", value = "JSON string of the unverified reduction model.")
  
  public String getUnverifiedReduction() {
    return unverifiedReduction;
  }

  public void setUnverifiedReduction(String unverifiedReduction) {
    this.unverifiedReduction = unverifiedReduction;
  }

  public VerificationResult unverifiedAddition(String unverifiedAddition) {
    this.unverifiedAddition = unverifiedAddition;
    return this;
  }

  /**
   * JSON string of the unverified addition model.
   * @return unverifiedAddition
   **/
  @JsonProperty(value = "unverified_addition")
  @ApiModelProperty(example = "(Addition model JSON)", value = "JSON string of the unverified addition model.")
  
  public String getUnverifiedAddition() {
    return unverifiedAddition;
  }

  public void setUnverifiedAddition(String unverifiedAddition) {
    this.unverifiedAddition = unverifiedAddition;
  }

  public VerificationResult reduction(ReductionEnum reduction) {
    this.reduction = reduction;
    return this;
  }

  /**
   * String boolean of whether the reduction is present.
   * @return reduction
   **/
  @JsonProperty(value = "reduction")
  @ApiModelProperty(required = true, value = "String boolean of whether the reduction is present.")
  @NotNull 
  public ReductionEnum getReduction() {
    return reduction;
  }

  public void setReduction(ReductionEnum reduction) {
    this.reduction = reduction;
  }

  public VerificationResult addition(AdditionEnum addition) {
    this.addition = addition;
    return this;
  }

  /**
   * String boolean of whether the addition is present.
   * @return addition
   **/
  @JsonProperty(value = "addition")
  @ApiModelProperty(required = true, value = "String boolean of whether the addition is present.")
  @NotNull 
  public AdditionEnum getAddition() {
    return addition;
  }

  public void setAddition(AdditionEnum addition) {
    this.addition = addition;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VerificationResult verificationResult = (VerificationResult) o;
    return Objects.equals(this.deltaUuid, verificationResult.deltaUuid) &&
        Objects.equals(this.creationTime, verificationResult.creationTime) &&
        Objects.equals(this.verifiedReduction, verificationResult.verifiedReduction) &&
        Objects.equals(this.verifiedAddition, verificationResult.verifiedAddition) &&
        Objects.equals(this.unverifiedReduction, verificationResult.unverifiedReduction) &&
        Objects.equals(this.unverifiedAddition, verificationResult.unverifiedAddition) &&
        Objects.equals(this.reduction, verificationResult.reduction) &&
        Objects.equals(this.addition, verificationResult.addition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deltaUuid, creationTime, verifiedReduction, verifiedAddition, unverifiedReduction, unverifiedAddition, reduction, addition);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VerificationResult {\n");
    
    sb.append("    deltaUuid: ").append(toIndentedString(deltaUuid)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    verifiedReduction: ").append(toIndentedString(verifiedReduction)).append("\n");
    sb.append("    verifiedAddition: ").append(toIndentedString(verifiedAddition)).append("\n");
    sb.append("    unverifiedReduction: ").append(toIndentedString(unverifiedReduction)).append("\n");
    sb.append("    unverifiedAddition: ").append(toIndentedString(unverifiedAddition)).append("\n");
    sb.append("    reduction: ").append(toIndentedString(reduction)).append("\n");
    sb.append("    addition: ").append(toIndentedString(addition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

