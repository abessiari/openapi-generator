/*
 * StackV Orchestrator Developer API
 * Documentation for the client-accessible endpoints of the StackV orchestrator.
 *
 * The version of the OpenAPI document: 0.8.2
 * Contact: alberto.est.jimenez@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package net.maxgigapop.mrs.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * This schema represents an access or validation policy for a metadata record.
 */
@ApiModel(description = "This schema represents an access or validation policy for a metadata record.")
@JsonPropertyOrder({
  SENSEMetadataPolicy.JSON_PROPERTY_NAME,
  SENSEMetadataPolicy.JSON_PROPERTY_TYPE,
  SENSEMetadataPolicy.JSON_PROPERTY_PRINCIPAL,
  SENSEMetadataPolicy.JSON_PROPERTY_OBJECT,
  SENSEMetadataPolicy.JSON_PROPERTY_LEVEL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2025-07-10T09:14:01.648708-07:00[America/Los_Angeles]", comments = "Generator version: 7.14.0")
public class SENSEMetadataPolicy   {
  public static final String JSON_PROPERTY_NAME = "name";
  @JsonProperty(JSON_PROPERTY_NAME)
  private String name;

  /**
   * Whether the policy is involved with access or value validation.
   */
  public enum TypeEnum {
    ACCESS("ACCESS"),
    
    VALIDATION("VALIDATION");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  @JsonProperty(JSON_PROPERTY_TYPE)
  private TypeEnum type;

  public static final String JSON_PROPERTY_PRINCIPAL = "principal";
  @JsonProperty(JSON_PROPERTY_PRINCIPAL)
  private String principal;

  public static final String JSON_PROPERTY_OBJECT = "object";
  @JsonProperty(JSON_PROPERTY_OBJECT)
  private String _object;

  /**
   * The level at which the principal is given read or write privileges.
   */
  public enum LevelEnum {
    NONE("NONE"),
    
    READ("READ"),
    
    WRITE("WRITE");

    private String value;

    LevelEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LevelEnum fromValue(String value) {
      for (LevelEnum b : LevelEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LEVEL = "level";
  @JsonProperty(JSON_PROPERTY_LEVEL)
  private LevelEnum level;

  public SENSEMetadataPolicy name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The human-readable name of the policy.
   * @return name
   **/
  @JsonProperty(value = "name")
  @ApiModelProperty(example = "janus-agent-access", value = "The human-readable name of the policy.")
  
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SENSEMetadataPolicy type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Whether the policy is involved with access or value validation.
   * @return type
   **/
  @JsonProperty(value = "type")
  @ApiModelProperty(value = "Whether the policy is involved with access or value validation.")
  
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public SENSEMetadataPolicy principal(String principal) {
    this.principal = principal;
    return this;
  }

  /**
   * The username or group being moderated.
   * @return principal
   **/
  @JsonProperty(value = "principal")
  @ApiModelProperty(example = "playwright-tester", value = "The username or group being moderated.")
  
  public String getPrincipal() {
    return principal;
  }

  public void setPrincipal(String principal) {
    this.principal = principal;
  }

  public SENSEMetadataPolicy _object(String _object) {
    this._object = _object;
    return this;
  }

  /**
   * The target of the policy, usually a metadata JSONPath.
   * @return _object
   **/
  @JsonProperty(value = "object")
  @ApiModelProperty(example = "$.agents[*].host", value = "The target of the policy, usually a metadata JSONPath.")
  
  public String getObject() {
    return _object;
  }

  public void setObject(String _object) {
    this._object = _object;
  }

  public SENSEMetadataPolicy level(LevelEnum level) {
    this.level = level;
    return this;
  }

  /**
   * The level at which the principal is given read or write privileges.
   * @return level
   **/
  @JsonProperty(value = "level")
  @ApiModelProperty(value = "The level at which the principal is given read or write privileges.")
  
  public LevelEnum getLevel() {
    return level;
  }

  public void setLevel(LevelEnum level) {
    this.level = level;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SENSEMetadataPolicy seNSEMetadataPolicy = (SENSEMetadataPolicy) o;
    return Objects.equals(this.name, seNSEMetadataPolicy.name) &&
        Objects.equals(this.type, seNSEMetadataPolicy.type) &&
        Objects.equals(this.principal, seNSEMetadataPolicy.principal) &&
        Objects.equals(this._object, seNSEMetadataPolicy._object) &&
        Objects.equals(this.level, seNSEMetadataPolicy.level);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, principal, _object, level);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SENSEMetadataPolicy {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    principal: ").append(toIndentedString(principal)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

